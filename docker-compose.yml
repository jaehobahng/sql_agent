services:
  postgres:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: your_username
      POSTGRES_PASSWORD: your_password
      POSTGRES_DB: your_database_name
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      
  python:
    image: python:3.11-slim
    container_name: python_app
    volumes:
      - .:/app
    working_dir: /app
    command: python script.py
    depends_on:
      - postgres
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: your_database_name
      DB_USER: your_username
      DB_PASSWORD: your_password
    build:
      context: .
volumes:
  postgres_data:














# services:
#   mongodb:
#     image: mongo:latest
#     container_name: mongodb
#     ports:
#       - "27017:27017"
#     volumes:
#       - crisis_data:/data/db  # Persistent volume for MongoDB data

#   backend:
#     build:
#       context: ./crisisfacts_summarization
#     depends_on:
#       - mongodb
#     environment:
#       MONGO_HOST: mongodb
#       MONGO_PORT: 27017
#     ports:
#       - "5001:5000"  # Expose first Flask app on port 5000

#   frontend:
#     build:
#       context: ./app  # Directory containing React app
#       dockerfile: Dockerfile  # React app Dockerfile
#     container_name: frontend_service
#     ports:
#       - "3000:3000"  # Expose port 3000 for React app
#     depends_on:
#       - mongodb
#     links:
#       - mongodb
#     volumes:
#       - ./app:/app/

# volumes:
#   crisis_data:
#     driver: local  # Persistent named volume