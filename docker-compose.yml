services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: your_username
      POSTGRES_PASSWORD: your_password
      POSTGRES_DB: your_database_name
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U your_username -d your_database_name"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./database
    container_name: backend
    working_dir: /app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: your_database_name
      DB_USER: your_username
      DB_PASSWORD: your_password

  chatbot:
    build:
      context: ./chatbot
    container_name: chatbot
    working_dir: /app
    depends_on:
      backend:
        condition: service_started
      postgres:
        condition: service_healthy
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: your_database_name
      DB_USER: your_username
      DB_PASSWORD: your_password
    ports:
      - "8501:8501"
    volumes:
      - ./chatbot:/app/

volumes:
  postgres_data: